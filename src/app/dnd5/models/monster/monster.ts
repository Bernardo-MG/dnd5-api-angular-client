import { Alignments } from "../enums/alignment";
import { ArmorClassArmor } from "./armor-class-armor";
import { MonsterAction } from "./monster-action";
import { MonsterProficiency } from "./monster-proficiency";
import { MonsterSpecialAbility } from "./monster-special-ability";
import { Reference } from "../info/reference";
import { Senses } from "../senses";
import { Sizes } from "../enums/sizes";
import { Speed } from "./speed";
import { ArmorConditionSpell } from "./armor-class-condition";
import { ArmorClassSimple } from "./armor-class-simple";
import { ArmorClassSpell } from "./armor-class-spell";

export class Monster {
    index: string = '';
    name: string = '';
    url: string = '';
    desc: string[] = [];
    charisma: number = 0;
    constitution: number = 0;
    dexterity: number = 0;
    intelligence: number = 0;
    strength: number = 0;
    wisdom: number = 0;
    image: string = '';
    size: Sizes = Sizes.Medium;
    type: string = '';
    subtype: string = '';
    alignments: Alignments = Alignments.neutral;
    armor_class: (ArmorClassArmor | ArmorConditionSpell | ArmorClassSimple | ArmorClassSpell)[] = [];
    hit_points: number = 0;
    hit_dice: string = '';
    hit_points_roll: string = '';
    actions: MonsterAction[] = [];
    legendary_actions: MonsterAction[] = [];
    challenge_rating: number = 0;
    condition_immunities: Reference[] = [];
    damage_immunities: string[] = [];
    damage_resistances: string[] = [];
    damage_vulnerabilities: string[] = [];
    forms: Reference[] = [];
    languages: string = '';
    proficiency: MonsterProficiency = new MonsterProficiency();
    reactions: MonsterAction[] = [];
    senses: Senses = new Senses();
    special_abilities: MonsterSpecialAbility[] = [];
    speed: Speed = new Speed();
    xp: number = 0;
}